(venv) C:\Users\lhs\Desktop\python\myWeb>python
Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from myWeb import db
C:\Users\lhs\Desktop\python\myWeb\venv\lib\site-packages\flask_sqlalchemy\__init__.py:814: UserWarning: Neither SQLALCHEMY_DATABASE_URI nor SQLALCHEMY_BINDS is set. Defaulting SQLALCHEMY_D
ATABASE_URI to "sqlite:///:memory:".
  'Neither SQLALCHEMY_DATABASE_URI nor SQLALCHEMY_BINDS is set. '
C:\Users\lhs\Desktop\python\myWeb\venv\lib\site-packages\flask_sqlalchemy\__init__.py:835: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disab
led by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
>>> db.create_all()
>>> from myWeb import User, Post
>>> user_1 = User(username='Corey', email='test@test.com', password='test')
>>> db.session.add(user_1)
>>> user_2 = User(username='John', email='test1@test1.com', password='test')
>>> db.session.add(user_2)
>>> db.session.commit()
>>> User.query.all()
[User('Corey', 'test@test.com','default.jpg'), User('John', 'test1@test1.com','default.jpg')]
>>> User.query.first()
User('Corey', 'test@test.com','default.jpg')
>>> User.query.filter_by(username='Corey').all()
[User('Corey', 'test@test.com','default.jpg')]
>>> User.query.filter_by(username='Corey').first()
User('Corey', 'test@test.com','default.jpg')
>>> user = User.query.filter_by(username='Corey').first()
>>> user
User('Corey', 'test@test.com','default.jpg')
>>> user.id
1
>>> user = User.query.get(1)
>>> user
User('Corey', 'test@test.com','default.jpg')
>>> user.posts
[]
>>> user.id
1
>>> post_1 = Post(title='Blog 1', content='First Post Content!', user_id=user.id)
>>> post_2 = Post(title='Blog 2', content='Second Post Content!', user_id=user.id)
>>> db.session.add(post_1)
>>> db.session.add(post_2)
>>> db.session.commit()
>>> for post in user.posts:
...   print(post.title)
...
...
Blog 1
Blog 2
>>> post = Post.query.first()
>>> post
Post('Blog 1', '2020-04-27 05:14:50.695164')
>>> post.user_id
1
>>> post.author
User('Corey', 'test@test.com','default.jpg')
>>> db.drop_all()
>>> db.create_all()
>>> User.query.all()
[]
>>> Post.query.all()
[]
>>>
